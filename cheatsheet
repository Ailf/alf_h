def plot_histogram( df , variables, n_rows, n_cols):
    fig = plt.figure(figsize = (16, 12))
    for i, var_name in enumerate( variables ):
        ax=fig.add_subplot( n_row, n_cols , i+1 )
        df[ var_name ].hist( bins=10 , ax=ax )
        ax.set_title( 'Skew: ' + str(round( float( df[var_name ].skew() ) , ) ) )
        ax.set_xticklabels( [] , visible=False )
        ax.set_yticklabels( [] , visible=False )
    fig.tight_layout() #improve appearance a little bit
    plt.show()
    
def plot_distribution( df , var , target , **kwargs ): *kwargs represent rows and columns*
    row = kwargs.get( 'row' , None)
    col = kwargs.get( 'col' , None)
    facet = sns.FacetGrid(df, hue=target , aspect=4 , row=row , col=col )
    facet.map( sns.kdeplot , var, shade = True )
    facet.set( xlim=( 0 , df[var].max()))
    facet.add_legend()

def plot_categories( df , cat , target , **kwargs ):
    row = kwargs.get('row' , None)
    col = kwargs.get('col' , None)
    facet = sns.FacetGrid( df, row=row , col=col )
    facet.map( sns.barplot , cat , target )
    facet.add_legend()
    
def plot_correlation_map( df ):
    corr = df.corr()
    - , ax = plt.subplots( figsize =( 12, 10 ) )
    cmap = sns.diverging_palette( 220 , 10, as_cma = True )
    _ - sns.heatmap(
        corr,
        cmap = cmap,
        square=True,
        cbar_kws={ 'shrink' : .9 },
        ax = ax,
        annot = True,
        annot_kws = {'fontsize' : 12 }
    )
    
       
def describe_more( df ):
    var = [] ; l = [] ; t = []
    for x in df:
        var.append( x )
        l.append( len( pd.value_counts( df[ x ])))
        t.append( df[ x ].dtypes )
    levels = pd.DataFrame( { 'Variable' : var , 'Levels' : 1  , 'Datatype : t } )
    levels.sort_values( by = 'Levels' , inplace = True )
    return levels
                            
